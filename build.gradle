buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        
        def user = hasProperty('artifactory_user') ? artifactory_user : System.getenv('artifactory_user')
        def creds = hasProperty('artifactory_password') ? artifactory_password : System.getenv('artifactory_password')
        
        maven {
            url 'http://138.68.65.103:8081/artifactory/plugins-release'
            credentials {
                username user
                password creds
            }
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "gradle.plugin.org.jetbrains:gradle-intellij-plugin:0.1.10"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

group 'de.monticore.lang.montisecarc'

apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

apply plugin: 'org.jetbrains.intellij'
intellij {
    pluginName name
    version ideaVersion

    downloadSources Boolean.valueOf(downloadIdeaSources)
    // FIXME: hack to support both IDEA 15 and IDEA 16.
    // See https://github.com/intellij-rust/intellij-rust/issues/243
    updateSinceUntilBuild = false

    sandboxDirectory = "${rootProject.buildDir}/idea-sandbox"

    plugins = ['com.neueda4j.intellij.plugin.cypher:2.2.0']
}


project.afterEvaluate {

    def prepareSandboxTask = project.tasks.findByName("prepareSandbox")
    prepareSandboxTask.doLast {

        def libFiles = new File("$prepareSandboxTask.destinationDir/${project.name}/lib/")
        libFiles.listFiles().each {
            if(!it.name.contains("freemarker") && !it.name.contains("caffeine") && !it.name.contains("fuel") && !it.name.contains("result") && !it.name.contains("klaxon")) {

                delete(it)
            }
        }
        def graphDb = project(":GraphDatabase").name + "-" + project(":GraphDatabase").version
        def jarFile2 = new File("$prepareSandboxTask.destinationDir/${project.name}/lib/${graphDb}.jar")
        def zipFile2 = new File("$prepareSandboxTask.destinationDir/${project.name}/lib/${graphDb}.zip")
        delete(jarFile2, zipFile2)
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceSets {
    main {
        java.srcDirs "gen", "src/java"
        kotlin.srcDirs "src/kotlin"
        resources.srcDir "resources"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile(project(":GraphDatabase"))

    compile 'com.beust:klaxon:0.27'
    compile 'com.github.kittinunf.fuel:fuel:1.3.1' //for JVM
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile group: 'org.freemarker', name: 'freemarker', version: '2.3.25-incubating'
    compile 'com.github.ben-manes.caffeine:caffeine:2.3.5'

}

version = "$version.$buildNumber"

apply from: "artifactory.gradle"
